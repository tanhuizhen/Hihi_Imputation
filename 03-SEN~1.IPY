{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5cb45351-8d1e-427c-8f82-952ad12aaea1",
   "metadata": {},
   "source": [
    "# Filter imputed SNPs based on r<sup>2</sup> value"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48e3fce2-3e7f-4670-9d26-8e47fe32a74e",
   "metadata": {},
   "source": [
    "Get list of imputed and non-imputed SNPs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97058b17-049d-42be-9970-ae314fdb989c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# R code\n",
    "# set working directory\n",
    "setwd(\"/nesi/nobackup/project/project_2/imputation-highCov-allTests/\")\n",
    "\n",
    "# thin5\n",
    "thin5 <- read.delim(\"./test_4-combination-gp/target-sample1-thin5_beagle5-w60-i24-st1600-sg6-gp.r2\", header = FALSE)\n",
    "thin5a <- thin5[thin5$V10 == \"1\",]\n",
    "thin5b <- as.data.frame(thin5a[,3])\n",
    "head(thin5b)\n",
    "nrow(thin5b)\n",
    "write.table(thin5b, \"./merge/thin5-imputedsnps.list\", col.names = FALSE, row.names = FALSE, quote = FALSE)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9db60473-f9bf-4e89-b657-b0781c568e03",
   "metadata": {},
   "source": [
    "Merge imputed files across samples and split into imputed vs non-imputed SNPs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ba0dea3-e3f6-4f1c-9708-bc481340fc93",
   "metadata": {},
   "outputs": [],
   "source": [
    "#!/bin/bash -e\n",
    "\n",
    "#SBATCH --job-name      results-merge\n",
    "#SBATCH --mem           10G\n",
    "#SBATCH --time          5:00:00\n",
    "#SBATCH --cpus-per-task 12\n",
    "#SBATCH --account       project\n",
    "#SBATCH --partition=milan\n",
    "#SBATCH --output=/nesi/nobackup/project/project_2/imputation-highCov-allTests/merge/logs/%x-%j.out\n",
    "\n",
    "# load modules\n",
    "module load BCFtools/1.19-GCC-11.3.0\n",
    "module load SAMtools/1.19-GCC-12.3.0\n",
    "module load VCFtools/0.1.15-GCC-9.2.0-Perl-5.30.1\n",
    "\n",
    "# set working directory\n",
    "cd /nesi/nobackup/project/project_2/imputation-highCov-allTests/\n",
    "\n",
    "# MERGE FILES\n",
    "# thin5\n",
    "bcftools merge ./test_4-combination-gp/target-*-thin5_beagle5-w60-i24-st1600-sg6-gp.vcf.gz --info-rules AF:join,DR2:avg -Oz -o ./merge/imputed-thin5-w60-i24-st1600-sg6-gp.vcf.gz\n",
    "\n",
    "# set working directory\n",
    "cd /nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\n",
    "\n",
    "## SPLIT FILES INTO IMPUTED AND NON-IMPUTED\n",
    "# thin5\n",
    "bcftools view -e 'ID=@thin5-imputedsnps.list' imputed-thin5-w60-i24-st1600-sg6-gp.vcf.gz -Oz -o \\\n",
    "imputed-thin5-w60-i24-st1600-sg6-gp-nonImputed.vcf.gz\n",
    "tabix -f imputed-thin5-w60-i24-st1600-sg6-gp-nonImputed.vcf.gz\n",
    "bcftools stats -s \"-\" imputed-thin5-w60-i24-st1600-sg6-gp-nonImputed.vcf.gz > imputed-thin5-w60-i24-st1600-sg6-gp-nonImputed.stats\n",
    "\n",
    "bcftools view -i 'ID=@thin5-imputedsnps.list' imputed-thin5-w60-i24-st1600-sg6-gp.vcf.gz -Oz -o \\\n",
    "imputed-thin5-w60-i24-st1600-sg6-gp-imputed.vcf.gz\n",
    "tabix -f imputed-thin5-w60-i24-st1600-sg6-gp-imputed.vcf.gz\n",
    "bcftools stats -s \"-\" imputed-thin5-w60-i24-st1600-sg6-gp-imputed.vcf.gz > imputed-thin5-w60-i24-st1600-sg6-gp-imputed.stats\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f51215c4-8dba-4f7c-8402-097d6b9bc9b5",
   "metadata": {},
   "source": [
    "Get list of SNPs below accuracy threshold"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a017f591-ac57-4184-a80c-3115f196506d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load libraries\n",
    "library(data.table)\n",
    "\n",
    "# set working directory\n",
    "setwd(\"/nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\")\n",
    "\n",
    "#### list of snps to remove ####b\n",
    "\n",
    "thinList <- list(\"thin5\", \"thin27\", \"thin45\", \"thin62\", \"thin93\", \"thinSnpchip\", \"thinRadseq\")\n",
    "\n",
    "for (thin in thinList){\n",
    "  variant <- read.delim(paste0(\"imputed-\",thin,\"-w60-i24-st1600-sg6-gp.vcf_per_variant_results.txt\"))\n",
    "  variant8 <- variant[variant$r2 < 0.8,]\n",
    "  variant8a <- as.data.frame(variant8[,1])\n",
    "  colnames(variant8a) <- c(\"position\")\n",
    "  variant8a$position <- gsub(\":\", \"_\", variant8a$position)\n",
    "  assign(paste0(thin,\"-0p8-remove\"),variant8a)\n",
    "  variant6 <- variant[variant$r2 < 0.6,]\n",
    "  variant6a <- as.data.frame(variant6[,1])\n",
    "  colnames(variant6a) <- c(\"position\")\n",
    "  variant6a$position <- gsub(\":\", \"_\", variant6a$position)\n",
    "  assign(paste0(thin,\"-0p6-remove\"),variant6a)\n",
    "}\n",
    "\n",
    "for (thin in thinList){\n",
    "  # output SNPs < 0.8\n",
    "  file8 <- get(paste0(thin,\"-0p8-remove\"))\n",
    "  write.table(file8, file = paste0(thin,\"-0p8-remove.list\"), quote = FALSE, row.names = FALSE, col.names = FALSE)\n",
    "  # output SNPs < 0.6\n",
    "  file6 <- get(paste0(thin,\"-0p6-remove\"))\n",
    "  write.table(file6, file = paste0(thin,\"-0p6-remove.list\"), quote = FALSE, row.names = FALSE, col.names = FALSE)\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11304daf-239a-4cec-819c-2cc4153595a7",
   "metadata": {},
   "source": [
    "Filter imputed SNPs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8e1f7329-2309-41a8-917b-df00b43e5dcd",
   "metadata": {},
   "outputs": [],
   "source": [
    "#!/bin/bash -e\n",
    "\n",
    "#SBATCH --job-name      merge-filter_site\n",
    "#SBATCH --mem           10G\n",
    "#SBATCH --time          2:00:00\n",
    "#SBATCH --cpus-per-task=12\n",
    "#SBATCH --account       project\n",
    "\n",
    "# set up environment\n",
    "module load BCFtools/1.19-GCC-11.3.0\n",
    "module load SAMtools/1.19-GCC-12.3.0\n",
    "module load VCFtools/0.1.15-GCC-9.2.0-Perl-5.30.1\n",
    "\n",
    "# set working directory\n",
    "cd /nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\n",
    "\n",
    "for thin in thin5 thin27 thin45 thin62 thin93 thinSnpchip thinRadseq\n",
    "    do\n",
    "    # filter imputed file with DR2 >= 0.8\n",
    "    bcftools view -e ID=@${thin}-0p8-remove.list imputed-${thin}-w60-i24-st1600-sg6-gp-imputed.vcf.gz -Oz -o \\\n",
    "    imputed-${thin}-w60-i24-st1600-sg6-gp-imputed-r2_0p8.vcf.gz\n",
    "    tabix -f imputed-${thin}-w60-i24-st1600-sg6-gp-imputed-r2_0p8.vcf.gz\n",
    "    # filter imputed file with DR2 >= 0.6\n",
    "    bcftools view -e ID=@${thin}-0p6-remove.list imputed-${thin}-w60-i24-st1600-sg6-gp-imputed.vcf.gz -Oz -o \\\n",
    "    imputed-${thin}-w60-i24-st1600-sg6-gp-imputed-r2_0p6.vcf.gz\n",
    "    tabix -f imputed-${thin}-w60-i24-st1600-sg6-gp-imputed-r2_0p6.vcf.gz\n",
    "    ## merge imputed with non-imputed\n",
    "    # 0.8\n",
    "    bcftools concat -a imputed-${thin}-w60-i24-st1600-sg6-gp-nonImputed.vcf.gz imputed-${thin}-w60-i24-st1600-sg6-gp-imputed-r2_0p8.vcf.gz | \\\n",
    "    bcftools sort -Oz -o imputed-${thin}-w60-i24-st1600-sg6-gp-r2_0p8.vcf.gz\n",
    "    bcftools stats -s \"-\" imputed-${thin}-w60-i24-st1600-sg6-gp-r2_0p8.vcf.gz > imputed-${thin}-w60-i24-st1600-sg6-gp-r2_0p8.stats\n",
    "    # 0.6\n",
    "    bcftools concat -a imputed-${thin}-w60-i24-st1600-sg6-gp-nonImputed.vcf.gz imputed-${thin}-w60-i24-st1600-sg6-gp-imputed-r2_0p6.vcf.gz | \\\n",
    "    bcftools sort -Oz -o imputed-${thin}-w60-i24-st1600-sg6-gp-r2_0p6.vcf.gz\n",
    "    bcftools stats -s \"-\" imputed-${thin}-w60-i24-st1600-sg6-gp-r2_0p6.vcf.gz > imputed-${thin}-w60-i24-st1600-sg6-gp-r2_0p6.stats\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5add550-a379-4d1f-948a-ae15621c4cfe",
   "metadata": {},
   "source": [
    "# Calculate observed individual heterozygosity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb48e0be-a990-40de-b2fb-ff6045267950",
   "metadata": {},
   "outputs": [],
   "source": [
    "    #!/bin/bash -e\n",
    "\n",
    "#SBATCH --job-name      vcf-heterozygosity\n",
    "#SBATCH --mem           10G\n",
    "#SBATCH --time          1:00:00\n",
    "#SBATCH --cpus-per-task=12\n",
    "#SBATCH --account       project\n",
    "\n",
    "# load programs\n",
    "module load VCFtools/0.1.15-GCC-9.2.0-Perl-5.30.1\n",
    "\n",
    "# set working directory\n",
    "cd /nesi/nobackup/project/project_2/vcftools-het/output\n",
    "\n",
    "# ground truth\n",
    "vcftools --het --gzvcf /nesi/nobackup/project/project_2/imputation-input/ref/hihi_wgs_filter_highcov_no83318-autosomes-snpID-noMissing-noSingleton-2allele.vcf.gz \\\n",
    "--out hihi_wgs_filter_highcov_no83318-autosomes-snpID-noMissing-noSingleton-2allele\n",
    "\n",
    "# thin tests\n",
    "for t in 5 27 45 62 93 Snpchip Radseq\n",
    "    do\n",
    "    for f in gp gp-r2_0p8 gp-r2_0p6\n",
    "        do\n",
    "        vcftools --het --gzvcf /nesi/nobackup/project/project_2/imputation-highCov-allTests/merge/imputed-thin${t}-w60-i24-st1600-sg6-${f}.vcf.gz \\\n",
    "        --out imputed-thin${t}-w60-i24-st1600-sg6-${f}\n",
    "        done\n",
    "    done\n",
    "\n",
    "# combine results\n",
    "grep \"\" imputed*.het > all_imputed_results.het\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86a663bc-2db0-4a94-ba3f-f39208856cea",
   "metadata": {},
   "source": [
    "Plot heterozygosity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2cec8107-c30f-4a1b-9444-ffa18c86a031",
   "metadata": {},
   "outputs": [],
   "source": [
    "# R code\n",
    "# load packages\n",
    "library(tidyr)\n",
    "library(ggplot2)\n",
    "\n",
    "# set working directory\n",
    "setwd(\"/nesi/project/project/project_2/2Imputation/vcftools-het/output\")\n",
    "\n",
    "# load nSNPs_postImputation\n",
    "nsnp <- read.delim(\"/nesi/project/project/project_2/2Imputation/vcftools-het/codes/nSNP_postImputation.txt\")\n",
    "\n",
    "# imputed results\n",
    "het <- read.delim(\"all_imputed_results.het\")\n",
    "het2 <- separate_wider_delim(het, cols = imputed.thin27.w60.i24.st1600.sg6.gp.het.INDV, delim = \":\", names = c(\"temp\", \"INDV\"))\n",
    "het3 <- separate_wider_delim(het2, cols = temp, delim = \"-\", names = c(\"temp1\", \"test\", \"window\", \"iter\", \"impState\", \"impSeg\", \"temp2\"), too_many = \"merge\")\n",
    "het4 <- separate_wider_delim(het3, cols = temp2, delim = \".\", names = c(\"temp3\", \"temp4\"), too_many = \"merge\")\n",
    "het5 <- separate_wider_delim(het4, cols = temp3, delim = \"_\", names = c(\"temp5\",  \"filter\"), too_few = \"align_start\")\n",
    "het5 <- het5 %>% replace_na(list(filter = \"none\"))\n",
    "het5$N_SITES <- as.numeric(het4$N_SITES)\n",
    "het6 <- na.omit(het5)\n",
    "het6$N_SITES_2 <- nsnp$nSNP_postImputation[match(paste0(het6$test,het6$filter),paste0(nsnp$test, nsnp$filter))]\n",
    "het6$O.HOM. <- as.numeric(het6$O.HOM.)\n",
    "het6$O.HET <- het6$N_SITES - het6$O.HOM.\n",
    "het6$propO.HET <- (het6$O.HET / het6$N_SITES_2)\n",
    "het7 <- het6[,c(\"INDV\", \"propO.HET\", \"test\", \"filter\")]\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c5f9c80-be8e-4120-8f84-98a2d5cea415",
   "metadata": {},
   "source": [
    "# Calculate allele frequency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9959f624-d1ca-4384-9a63-eb70624ce4b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#!/bin/bash -e\n",
    "\n",
    "#SBATCH --job-name      2024-10-02_results-merge\n",
    "#SBATCH --mem           10G\n",
    "#SBATCH --time          5:00:00\n",
    "#SBATCH --cpus-per-task 12\n",
    "#SBATCH --account       project\n",
    "#SBATCH --partition=milan\n",
    "#SBATCH --output=/nesi/nobackup/project/project_2/imputation-highCov-allTests/merge/logs/%x-%j.out\n",
    "\n",
    "# load modules\n",
    "module load BCFtools/1.19-GCC-11.3.0\n",
    "module load VCFtools/0.1.15-GCC-9.2.0-Perl-5.30.1\n",
    "\n",
    "# set working directory\n",
    "cd /nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\n",
    "\n",
    "# calculate allele frequency using vcftools\n",
    "vcftools --gzvcf imputed-thin5-w60-i24-st1600-sg6-gp.vcf.gz --freq --out imputed-thin5-w60-i24-st1600-sg6-gp-vcftools\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7782037f-af65-4ca5-aafd-ffd81e84caac",
   "metadata": {},
   "source": [
    "Plot SFS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "265ebb3a-6c5d-4b1f-a46d-3d17b986e881",
   "metadata": {},
   "outputs": [],
   "source": [
    "# R code\n",
    "# load packages\n",
    "options(scipen = 999)\n",
    "library(tidyr)\n",
    "library(ggplot2)\n",
    "library(cowplot)\n",
    "library(patchwork)   \n",
    "library(grid)\n",
    "library(gridExtra)\n",
    "library(ggpattern)\n",
    "\n",
    "# IMPORT DATA\n",
    "#### ground truth ####\n",
    "truth <- read.delim(\"/nesi/project/project/project_2/2Imputation/imputation-input/ref/hihi_wgs_filter_highcov_no83318-autosomes-snpID-noMissing-noSingleton-2allele-vcftools.frq\", fill = TRUE, row.names = NULL)\n",
    "colnames(truth) <- c(\"chrom\", \"pos\", \"n_alleles\", \"n_chr\", \"temp1\", \"temp2\")\n",
    "truth2 <- separate_wider_delim(truth, cols = temp1, delim = \":\", names = c(\"allele1\", \"allele1freq\"))\n",
    "truth2 <- separate_wider_delim(truth2, cols = temp2, delim = \":\", names = c(\"allele2\", \"allele2freq\"))\n",
    "truth2$allele1freq <- as.numeric(truth2$allele1freq)\n",
    "truth2$allele2freq <- as.numeric(truth2$allele2freq)\n",
    "head(truth2)\n",
    "\n",
    "# query allele 2\n",
    "quantile(truth2$allele2freq)\n",
    "\n",
    "# fold allele 2 (alt)\n",
    "truth2$allele2freqFold <- ifelse(truth2$allele2freq > 0.5,\n",
    "                                 1-truth2$allele2freq,\n",
    "                                 truth2$allele2freq)\n",
    "quantile(truth2$allele2freqFold)\n",
    "truth2$type <- ifelse(truth2$allele2freqFold == 0,\n",
    "                     \"zero\",\n",
    "                     \"notZero\")\n",
    "\n",
    "truthPlot <- ggplot(truth2, aes(x=allele2freqFold)) +\n",
    "  geom_histogram_pattern(fill = \"#44AA99\",\n",
    "                         binwidth = 0.1,\n",
    "                         aes(pattern = type),\n",
    "                         pattern_fill = \"black\",\n",
    "                         pattern_density = 0.1,\n",
    "                         pattern_spacing = 0.025) +\n",
    "  theme_classic() +\n",
    "  labs(title = \"Ground truth\\n2.87K SNPs/Mb\", subtitle = \"\", x = \"Minor allele frequency\", y = \"Number of SNPs\") +\n",
    "  ggtitle(\"Ground truth\\n2.87K SNPs/Mb\") +\n",
    "  scale_y_continuous(labels = scales::comma) +\n",
    "  scale_pattern_manual(values = c(zero = \"stripe\", notZero = \"none\")) +\n",
    "  theme(axis.title.x = element_blank(),\n",
    "        axis.title.y = element_blank(),\n",
    "        plot.title = element_text(size = 12, face = \"bold\"),\n",
    "        plot.subtitle = element_text(size = 12),\n",
    "        legend.position = \"none\") +\n",
    "  guides(pattern = guide_legend(override.aes = list(fill = \"white\")))\n",
    "\n",
    "#### RAW ####\n",
    "setwd(\"/nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\")\n",
    "\n",
    "tests <- c(\"thin5\", \"thin27\", \"thin45\", \"thin62\", \"thin93\", \"thinSnpchip\", \"thinRadseq\")\n",
    "#rawTitles <- c(\"Missingness 5%\", \"27%\", \"45%\", \"62%\", \"93%\", \"98% (SNP-chip)\", \"99% (RADseq)\")\n",
    "rawTitles <- c(\"SNP density (SNPs/Mb)\\n2.73K\", \" \\n2.10K\", \" \\n1.58K\", \" \\n1.09K\", \" \\n197\", \" \\n48.9 (SNP-chip)\", \" \\n19.6 (RADseq)\")\n",
    "rawSubtitles <- c(\"raw imputed\", \"\", \"\", \"\", \"\", \"\", \"\")\n",
    "\n",
    "for (i in 1:7) {\n",
    "  thin <- read.delim(paste0(\"imputed-\",tests[i],\"-w60-i24-st1600-sg6-gp-vcftools.frq\"), fill = TRUE, row.names = NULL)\n",
    "  colnames(thin) <- c(\"chrom\", \"pos\", \"n_alleles\", \"n_chr\", \"temp1\", \"temp2\")\n",
    "  thin2 <- separate_wider_delim(thin, cols = temp1, delim = \":\", names = c(\"allele1\", \"allele1freq\"))\n",
    "  thin2 <- separate_wider_delim(thin2, cols = temp2, delim = \":\", names = c(\"allele2\", \"allele2freq\"))\n",
    "  thin2$allele1freq <- as.numeric(thin2$allele1freq)\n",
    "  thin2$allele2freq <- as.numeric(thin2$allele2freq)\n",
    "  head(thin2)\n",
    "  # fold allele 2 (alt)\n",
    "  thin2$allele2freqFold <- ifelse(thin2$allele2freq > 0.5,\n",
    "                                  1-thin2$allele2freq,\n",
    "                                  thin2$allele2freq)\n",
    "  quantile(thin2$allele2freqFold)\n",
    "  thin2$type <- ifelse(thin2$allele2freqFold == 0,\n",
    "                        \"zero\",\n",
    "                        \"notZero\")\n",
    "  plot <- ggplot(thin2, aes(x=allele2freqFold)) +\n",
    "    geom_histogram_pattern(fill = \"#88CCEE\",\n",
    "                           binwidth = 0.1,\n",
    "                           aes(pattern = type),\n",
    "                           pattern_fill = \"black\",\n",
    "                           pattern_density = 0.1,\n",
    "                           pattern_spacing = 0.025) +\n",
    "    theme_classic() +\n",
    "    labs(title = rawTitles[i], subtitle = rawSubtitles[i]) +\n",
    "    ggtitle(paste0(rawTitles[i])) +\n",
    "    scale_y_continuous(labels = scales::comma, limits = c(0,1200000)) +\n",
    "    scale_pattern_manual(values = c(zero = \"stripe\", notZero = \"none\")) +\n",
    "    theme(axis.title.x = element_blank(),\n",
    "          axis.title.y = element_blank(),\n",
    "          plot.title = element_text(size = 12, face = \"bold\"),\n",
    "          plot.subtitle = element_text(size = 12),\n",
    "          axis.text.y = element_blank(),\n",
    "          legend.position = \"none\") +\n",
    "    guides(pattern = guide_legend(override.aes = list(fill = \"white\")))\n",
    "  assign(paste0(\"plot-raw_\",tests[i]), plot, envir = .GlobalEnv)\n",
    "}\n",
    "\n",
    "#### FILTER R2 >=0.6 ####\n",
    "setwd(\"/nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\")\n",
    "tests <- c(\"thin5\", \"thin27\", \"thin45\", \"thin62\", \"thin93\", \"thinSnpchip\", \"thinRadseq\")\n",
    "sixSubtitles <- c(expression(paste(\"r\"^2,\"\\u22650.6\")),\"\",\"\",\"\",\"\",\"\",\"\")\n",
    "\n",
    "for (i in 1:7) {\n",
    "  thin <- read.delim(paste0(\"imputed-\",tests[i],\"-w60-i24-st1600-sg6-gp-r2_0p6-vcftools.frq\"), fill = TRUE, row.names = NULL)\n",
    "  colnames(thin) <- c(\"chrom\", \"pos\", \"n_alleles\", \"n_chr\", \"temp1\", \"temp2\")\n",
    "  thin2 <- separate_wider_delim(thin, cols = temp1, delim = \":\", names = c(\"allele1\", \"allele1freq\"))\n",
    "  thin2 <- separate_wider_delim(thin2, cols = temp2, delim = \":\", names = c(\"allele2\", \"allele2freq\"))\n",
    "  thin2$allele1freq <- as.numeric(thin2$allele1freq)\n",
    "  thin2$allele2freq <- as.numeric(thin2$allele2freq)\n",
    "  head(thin2)\n",
    "  # fold allele 2 (alt)\n",
    "  thin2$allele2freqFold <- ifelse(thin2$allele2freq > 0.5,\n",
    "                                  1-thin2$allele2freq,\n",
    "                                  thin2$allele2freq)\n",
    "  quantile(thin2$allele2freqFold)\n",
    "  thin2$type <- ifelse(thin2$allele2freqFold == 0,\n",
    "                       \"zero\",\n",
    "                       \"notZero\")\n",
    "  plot <- ggplot(thin2, aes(x=allele2freqFold)) +\n",
    "    geom_histogram_pattern(fill = \"#74a1d4\",\n",
    "                           binwidth = 0.1,\n",
    "                           aes(pattern = type),\n",
    "                           pattern_fill = \"black\",\n",
    "                           pattern_density = 0.1,\n",
    "                           pattern_spacing = 0.025) +\n",
    "    theme_classic() +\n",
    "    labs(title = \"\", subtitle = sixSubtitles[i]) +\n",
    "    scale_y_continuous(labels = scales::comma, limits = c(0,600000)) +\n",
    "    scale_pattern_manual(values = c(zero = \"stripe\", notZero = \"none\")) +\n",
    "    theme(axis.title.x = element_blank(),\n",
    "          axis.title.y = element_blank(),\n",
    "          axis.text.y = element_blank(),\n",
    "          plot.title = element_text(size = 12, face = \"bold\"),\n",
    "          plot.subtitle = element_text(size = 12),\n",
    "          legend.position = \"none\") +\n",
    "    guides(pattern = guide_legend(override.aes = list(fill = \"white\")))\n",
    "  assign(paste0(\"plot-0p6_\",tests[i]), plot, envir = .GlobalEnv)\n",
    "}\n",
    "\n",
    "#### FILTER R2 >=0.8 ####\n",
    "setwd(\"/nesi/nobackup/project/project_2/imputation-highCov-allTests/merge\")\n",
    "\n",
    "tests <- c(\"thin5\", \"thin27\", \"thin45\", \"thin62\", \"thin93\", \"thinSnpchip\", \"thinRadseq\")\n",
    "eightSubtitles <- c(expression(paste(\"r\"^2,\"\\u22650.8\")),\"\",\"\",\"\",\"\",\"\",\"\")\n",
    "\n",
    "\n",
    "for (i in 1:7) {\n",
    "  thin <- read.delim(paste0(\"imputed-\",tests[i],\"-w60-i24-st1600-sg6-gp-r2_0p8-vcftools.frq\"), fill = TRUE, row.names = NULL)\n",
    "  colnames(thin) <- c(\"chrom\", \"pos\", \"n_alleles\", \"n_chr\", \"temp1\", \"temp2\")\n",
    "  thin2 <- separate_wider_delim(thin, cols = temp1, delim = \":\", names = c(\"allele1\", \"allele1freq\"))\n",
    "  thin2 <- separate_wider_delim(thin2, cols = temp2, delim = \":\", names = c(\"allele2\", \"allele2freq\"))\n",
    "  thin2$allele1freq <- as.numeric(thin2$allele1freq)\n",
    "  thin2$allele2freq <- as.numeric(thin2$allele2freq)\n",
    "  head(thin2)\n",
    "  # fold allele 2 (alt)\n",
    "  thin2$allele2freqFold <- ifelse(thin2$allele2freq > 0.5,\n",
    "                                  1-thin2$allele2freq,\n",
    "                                  thin2$allele2freq)\n",
    "  quantile(thin2$allele2freqFold)\n",
    "  thin2$type <- ifelse(thin2$allele2freqFold == 0,\n",
    "                       \"zero\",\n",
    "                       \"notZero\")\n",
    "  plot <- ggplot(thin2, aes(x=allele2freqFold)) +\n",
    "    geom_histogram_pattern(fill = \"#5E77BB\",\n",
    "                           binwidth = 0.1,\n",
    "                           aes(pattern = type),\n",
    "                           pattern_fill = \"black\",\n",
    "                           pattern_density = 0.1,\n",
    "                           pattern_spacing = 0.025) +\n",
    "    theme_classic() +\n",
    "    labs(title = \"\", subtitle = eightSubtitles[i]) +\n",
    "    scale_y_continuous(labels = scales::comma, limits = c(0,600000)) +\n",
    "    scale_pattern_manual(values = c(zero = \"stripe\", notZero = \"none\")) +\n",
    "    theme(axis.title.x = element_blank(),\n",
    "          axis.title.y = element_blank(),\n",
    "          axis.text.y = element_blank(),\n",
    "          plot.title = element_text(size = 12, face = \"bold\"),\n",
    "          plot.subtitle = element_text(size = 12),\n",
    "          legend.position = \"none\") +\n",
    "    guides(pattern = guide_legend(override.aes = list(fill = \"white\")))\n",
    "  assign(paste0(\"plot-0p8_\",tests[i]), plot, envir = .GlobalEnv)\n",
    "}\n",
    "\n",
    "## plot\n",
    "\n",
    "\n",
    "# combine plots\n",
    "plot_sfs <- plot_grid(plot_grid(truthPlot + ylim(0,1200000), `plot-raw_thin5`, `plot-raw_thin27`, `plot-raw_thin45`, `plot-raw_thin62`, `plot-raw_thin93`, `plot-raw_thinSnpchip`, `plot-raw_thinRadseq`, nrow = 1, align = \"h\", axis = \"bt\", rel_widths = c(1.3,1,1,1,1,1,1,1)),\n",
    "          plot_grid(truthPlot + theme(plot.title = element_blank()) + ylim(0,600000), `plot-0p6_thin5`, `plot-0p6_thin27`, `plot-0p6_thin45`, `plot-0p6_thin62`, `plot-0p6_thin93`, `plot-0p6_thinSnpchip`, `plot-0p6_thinRadseq`, nrow = 1, align = \"h\", axis = \"bt\", rel_widths = c(1.3,1,1,1,1,1,1,1)),\n",
    "          plot_grid(truthPlot + theme(plot.title = element_blank()) +ylim(0,600000), `plot-0p8_thin5`, `plot-0p8_thin27`, `plot-0p8_thin45`, `plot-0p8_thin62`, `plot-0p8_thin93`, `plot-0p8_thinSnpchip`, `plot-0p8_thinRadseq`, nrow = 1, align = \"h\", axis = \"bt\", rel_widths = c(1.3,1,1,1,1,1,1,1)),\n",
    "          ncol = 1)\n",
    "\n",
    "# create common x and y labels\n",
    "y.grob <- textGrob(\"Number of SNPs\", \n",
    "                   gp=gpar(fontface=\"bold\", fontsize=15), rot=90)\n",
    "x.grob <- textGrob(\"Minor allele frequency\", \n",
    "                   gp=gpar(fontface=\"bold\", fontsize=15))\n",
    "\n",
    "png(\"/nesi/project/project/project_2/2Imputation/sfs/imputation-highCov-foldedSfs-filtered-v7.png\", width = 14, height = 8, units = \"in\", res = 300)\n",
    "grid.arrange(plot_sfs, left = y.grob, bottom = x.grob)\n",
    "dev.off()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7def59f-418a-40f8-9c84-951b2a70f57f",
   "metadata": {},
   "source": [
    "# Runs of homozygosity"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a00b894d-3ca3-4426-9a39-626d63de1dda",
   "metadata": {},
   "source": [
    "R script"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ca434079-9a06-4fb9-876b-918cf2f0edb4",
   "metadata": {},
   "outputs": [],
   "source": [
    "args <- commandArgs(trailingOnly = TRUE)\n",
    "str(args)\n",
    "cat(args, sep = \"\\n\")\n",
    "\n",
    "# load packages\n",
    "library(ggplot2)\n",
    "library(data.table)\n",
    "library(tidyr)\n",
    "library(dplyr)\n",
    "library(RZooRoH)\n",
    "\n",
    "# set working directory\n",
    "setwd(\"/nesi/nobackup/project/project_2/rzooroh/\")\n",
    "\n",
    "## import data\n",
    "# Specifying the data file and genotype / sequence format\n",
    "imputed_GP <- zoodata(genofile = paste0(\"./input/imputed-\",args[1],\"-gp-r2_\",args[2],\".gen\"), zformat = \"gp\", samplefile = \"./codes/sampleFile.txt\", supcol = 6, chrcol = 1, poscol = 4)\n",
    "\n",
    "## define the model\n",
    "# model\n",
    "# err=0.25% (0.0025) - Laura\n",
    "mix13R <- zoomodel(K=13,krates=c( 10, 20, 30, 40, 50, 100, 200, 500, 600, 700, 1000, 2000, 2000),err=0.0025,layers = TRUE)\n",
    "\n",
    "## run model\n",
    "results <- zoorun(mix13R, imputed_GP, localhbd = TRUE, nT = 12)\n",
    "name <- paste0(\"imputed-\",args[1],\"-gp-r2_\",args[2],\"_results\")\n",
    "assign(name, results)\n",
    "\n",
    "# save results\n",
    "save(list = name, file = paste0(\"/nesi/nobackup/project/project_2/rzooroh/output/imputed-\",args[1],\"-gp-r2_\",args[2],\"_results.RData\"))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfe54ddf-df4a-4a57-9e77-4fcf5486d876",
   "metadata": {},
   "source": [
    "To run R script"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a4d86f3-a3e6-48b3-a1af-fb73b3fc91d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#!/bin/bash -e\n",
    "\n",
    "#SBATCH --job-name      RZooROH_K13-imputed-gp-v2\n",
    "#SBATCH --mem           90GB\n",
    "#SBATCH --time          15:00:00\n",
    "#SBATCH --cpus-per-task 12\n",
    "#SBATCH --array         1-14\n",
    "#SBATCH --account       project\n",
    "\n",
    "## load modules\n",
    "module load BCFtools/1.19-GCC-11.3.0\n",
    "\n",
    "## extract variables\n",
    "# reference config file\n",
    "config=/nesi/nobackup/project/project_2/rzooroh/codes/array-v2.config\n",
    "\n",
    "# extract variables\n",
    "test=$(awk -v ArrayTaskID=$SLURM_ARRAY_TASK_ID '$1==ArrayTaskID {print $2}' $config)\n",
    "filter=$(awk -v ArrayTaskID=$SLURM_ARRAY_TASK_ID '$1==ArrayTaskID {print $3}' $config)\n",
    "\n",
    "## make input files\n",
    "# recode a VCF to the Oxford GEN format (zformat is genotype)\n",
    "cd /nesi/nobackup/project/project_2/rzooroh/input\n",
    "\n",
    "bcftools convert --gensample imputed-${test}-gp-r2_${filter} --3N6 --tag GT /nesi/nobackup/project/project_2/imputation-highCov-allTests/merge/imputed-${test}-w60-i24-st1600-sg6-gp-r2_${filter}.vcf.gz\n",
    "gunzip -f imputed-${test}-gp-r2_${filter}.gen.gz\n",
    "\n",
    "## run RZooRoH\n",
    "module load R/4.3.2-foss-2023a\n",
    "\n",
    "# run script\n",
    "cd /nesi/nobackup/project/project_2/rzooroh/codes\n",
    "echo \"Executing R ...\"\n",
    "srun Rscript --vanilla RZooRoH_K13-imputed-gp-v2.R ${test} ${filter}\n",
    "echo \"R habis.\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.11.3 (gimkl-2022a)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
